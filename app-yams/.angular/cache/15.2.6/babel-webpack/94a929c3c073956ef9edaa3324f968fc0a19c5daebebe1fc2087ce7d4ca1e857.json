{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Status } from '../user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../user.service\";\nimport * as i3 from \"@angular/router\";\nfunction RegisterComponent_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name must be at least 5 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, RegisterComponent_div_5_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtemplate(2, RegisterComponent_div_5_div_2_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"minlength\"]);\n  }\n}\nfunction RegisterComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_12_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" bad syntax email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, RegisterComponent_div_12_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtemplate(2, RegisterComponent_div_12_div_2_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.email.errors == null ? null : ctx_r1.email.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.email.errors == null ? null : ctx_r1.email.errors[\"email\"]);\n  }\n}\nexport class RegisterComponent {\n  constructor(fb, us, router // router est un service\n  ) {\n    this.fb = fb;\n    this.us = us;\n    this.router = router;\n    this.user = {\n      name: '',\n      email: '',\n      address: '',\n      status: Status.Paused\n    };\n    this.userForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(5)]],\n      email: ['', [Validators.email, Validators.required]],\n      address: ['']\n    });\n  }\n  // getter pour la validation dans le formulaire errors\n  get name() {\n    return this.userForm.get('name');\n  }\n  get email() {\n    return this.userForm.get('email');\n  }\n  get address() {\n    return this.userForm.get('address');\n  }\n  onSubmit() {\n    this.user.name = this.userForm.value.name ?? '';\n    this.user.email = this.userForm.value.email ?? '';\n    this.user.address = this.userForm.value.address ?? '';\n    this.us.createUser(this.user).subscribe(user => {\n      this.router.navigate(['/home'], {\n        queryParams: {\n          message: 'success'\n        }\n      });\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 20,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"formControlName\", \"name\", \"type\", \"text\", \"id\", \"name\", \"placeholder\", \"Name\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"exampleInputEmail1\"], [\"formControlName\", \"email\", \"type\", \"email\", \"id\", \"mail\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"Enter email\", 1, \"form-control\"], [\"id\", \"emailHelp\", 1, \"form-text\", \"text-muted\"], [\"for\", \"address\"], [\"formControlName\", \"address\", \"id\", \"address\", \"placeholder\", \"address\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵtemplate(5, RegisterComponent_div_5_Template, 3, 2, \"div\", 4);\n      i0.ɵɵelementStart(6, \"div\", 1)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementStart(10, \"small\", 7);\n      i0.ɵɵtext(11, \"We'll never share your email with anyone else.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, RegisterComponent_div_12_Template, 3, 2, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 1)(14, \"label\", 8);\n      i0.ɵɵtext(15, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"textarea\", 9);\n      i0.ɵɵtext(17, \"        \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"button\", 10);\n      i0.ɵɵtext(19, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.name && ctx.name.invalid && (ctx.name.dirty || ctx.name.touched));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.email && ctx.email.invalid && (ctx.email.dirty || ctx.email.touched));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"disabled\", !ctx.userForm.valid);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","Status","i0","RegisterComponent","constructor","fb","us","router","name","email","address","status","Paused","group","required","minLength","userForm","get","onSubmit","user","value","createUser","subscribe","navigate","queryParams","message","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/richardmelanie/Desktop/patisserie/Pastries/app-yams/src/app/register/register.component.ts","/Users/richardmelanie/Desktop/patisserie/Pastries/app-yams/src/app/register/register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { Status, User } from '../user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n\n  user: User = {\n    name: '',\n    email: '',\n    address: '',\n    status: Status.Paused\n  }\n\n  userForm = this.fb.group({\n    name: ['', [Validators.required, Validators.minLength(5)]],\n    email: ['', [Validators.email, Validators.required]],\n    address: ['']\n  });\n\n  constructor(\n    private fb: FormBuilder, \n    private us: UserService,\n    private router: Router // router est un service\n    ) { }\n\n  // getter pour la validation dans le formulaire errors\n  get name() {\n    return this.userForm.get('name');\n  }\n\n  get email() {\n    return this.userForm.get('email');\n  }\n\n  get address() {\n    return this.userForm.get('address');\n  }\n\n  onSubmit() {\n    this.user.name = this.userForm.value.name ?? '';\n    this.user.email = this.userForm.value.email ?? '';\n    this.user.address = this.userForm.value.address ?? '';\n\n    this.us.createUser(this.user).subscribe(user => {\n\n      this.router.navigate(['/home'], { queryParams: { message: 'success' } });\n    })\n  }\n\n}\n\n","<form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input formControlName=\"name\" type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Name\">\n        <div *ngIf=\"name && name.invalid && (name.dirty || name.touched)\" class=\"alert alert-danger\">\n            <div *ngIf=\"name.errors?.['required']\">\n                Name is required.\n            </div>\n            <div *ngIf=\"name.errors?.['minlength']\">\n                Name must be at least 5 characters long.\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Email</label>\n            <input formControlName=\"email\" type=\"email\" class=\"form-control\" id=\"mail\" aria-describedby=\"emailHelp\"\n                placeholder=\"Enter email\">\n            <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n            <div *ngIf=\"email && email.invalid && (email.dirty || email.touched)\" class=\"alert alert-danger\">\n                <div *ngIf=\"email.errors?.['required']\">\n                    Email is required.\n                </div>\n                <div *ngIf=\"email.errors?.['email']\">\n                    bad syntax email\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"address\">Address</label>\n            <textarea formControlName=\"address\" class=\"form-control\" id=\"address\" placeholder=\"address\">\n        </textarea>\n        </div>\n        <button [disabled]=\"!userForm.valid\" type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </div>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}