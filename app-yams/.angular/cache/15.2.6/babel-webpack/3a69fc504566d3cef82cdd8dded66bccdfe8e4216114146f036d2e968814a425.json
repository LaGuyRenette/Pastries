{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../pastries.service\";\nimport * as i3 from \"@angular/common\";\nfunction CreatePastriesComponent_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreatePastriesComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, CreatePastriesComponent_div_5_div_1_Template, 2, 0, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.pastrieForm.get(\"name\")) == null ? null : tmp_0_0.errors.required);\n  }\n}\nexport class CreatePastriesComponent {\n  constructor(fb, ps) {\n    this.fb = fb;\n    this.ps = ps;\n  }\n  ngOnInit() {\n    this.pastrieForm = this.fb.group({\n      name: ['', Validators.required],\n      ref: ['', Validators.required],\n      description: ['', Validators.required],\n      url: ['', Validators.required],\n      quantity: ['', Validators.required],\n      order: ['', Validators.required],\n      like: ['', Validators.required],\n      choice: ['', Validators.required]\n    });\n  }\n  submitForm() {\n    if (this.pastrieForm.valid) {\n      const formData = this.pastrieForm.value;\n      this.ps.createPastrie(formData).subscribe(() => {\n        // Réinitialisez le formulaire ou effectuez une autre action après la création réussie de la pâtisserie\n        this.pastrieForm.reset();\n      });\n    }\n  }\n}\nCreatePastriesComponent.ɵfac = function CreatePastriesComponent_Factory(t) {\n  return new (t || CreatePastriesComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PastriesService));\n};\nCreatePastriesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreatePastriesComponent,\n  selectors: [[\"app-create-pastries\"]],\n  decls: 8,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"submit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\"], [4, \"ngIf\"], [\"type\", \"submit\", 3, \"disabled\"]],\n  template: function CreatePastriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function CreatePastriesComponent_Template_form_submit_0_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵtemplate(5, CreatePastriesComponent_div_5_Template, 2, 1, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 4);\n      i0.ɵɵtext(7, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      i0.ɵɵproperty(\"formGroup\", ctx.pastrieForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.pastrieForm.get(\"name\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.pastrieForm.get(\"name\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.pastrieForm.invalid);\n    }\n  },\n  dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;ICI3DC,2BAAsD;IACpDA,kCACF;IAAAA,iBAAM;;;;;IAHRA,2BAAkF;IAChFA,8EAEM;IACRA,iBAAM;;;;;IAHEA,eAA8C;IAA9CA,0GAA8C;;;ADI5D,OAAM,MAAOC,uBAAuB;EAElCC,YAAoBC,EAAe,EAAUC,EAAmB;IAA5C,OAAE,GAAFD,EAAE;IAAuB,OAAE,GAAFC,EAAE;EAAqB;EACpEC,QAAQ;IACN,IAAI,CAACC,WAAW,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC/BC,IAAI,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MAC/BC,GAAG,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACU,QAAQ,CAAC;MAC9BE,WAAW,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACU,QAAQ,CAAC;MACtCG,GAAG,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACU,QAAQ,CAAC;MAC9BI,QAAQ,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACU,QAAQ,CAAC;MACnCK,KAAK,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACU,QAAQ,CAAC;MAChCM,IAAI,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACU,QAAQ,CAAC;MAC/BO,MAAM,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACU,QAAQ;KACjC,CAAC;EACJ;EACAQ,UAAU;IACR,IAAI,IAAI,CAACX,WAAW,CAACY,KAAK,EAAE;MAC1B,MAAMC,QAAQ,GAAG,IAAI,CAACb,WAAW,CAACc,KAAK;MACvC,IAAI,CAAChB,EAAE,CAACiB,aAAa,CAACF,QAAQ,CAAC,CAACG,SAAS,CAAC,MAAK;QAC7C;QACA,IAAI,CAAChB,WAAW,CAACiB,KAAK,EAAE;MAC1B,CAAC,CAAC;;EAEN;;AAvBWtB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTpC5B,+BAAwD;MAAxBA;QAAA,OAAU6B,gBAAY;MAAA,EAAC;MACnD7B,2BAAK;MACeA,oBAAI;MAAAA,iBAAQ;MAC9BA,2BAAoD;MACpDA,wEAIM;MACRA,iBAAM;MAENA,iCAAuD;MAAAA,sBAAM;MAAAA,iBAAS;;;;MAXpEA,2CAAyB;MAInBA,eAA0E;MAA1EA,+KAA0E;MAO5DA,eAAgC;MAAhCA,kDAAgC","names":["Validators","i0","CreatePastriesComponent","constructor","fb","ps","ngOnInit","pastrieForm","group","name","required","ref","description","url","quantity","order","like","choice","submitForm","valid","formData","value","createPastrie","subscribe","reset","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/richardmelanie/Desktop/patisserie/Pastries/app-yams/src/app/create-pastries/create-pastries.component.ts","/Users/richardmelanie/Desktop/patisserie/Pastries/app-yams/src/app/create-pastries/create-pastries.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PastriesService } from '../pastries.service';\n\n@Component({\n  selector: 'app-create-pastries',\n  templateUrl: './create-pastries.component.html',\n  styleUrls: ['./create-pastries.component.scss']\n})\nexport class CreatePastriesComponent {\n  pastrieForm: FormGroup;\n  constructor(private fb: FormBuilder, private ps: PastriesService) { }\n  ngOnInit(): void {\n    this.pastrieForm = this.fb.group({\n      name: ['', Validators.required],\n      ref: ['', Validators.required],\n      description: ['', Validators.required],\n      url: ['', Validators.required],\n      quantity: ['', Validators.required],\n      order: ['', Validators.required],\n      like: ['', Validators.required],\n      choice: ['', Validators.required]\n    });\n  }\n  submitForm(): void {\n    if (this.pastrieForm.valid) {\n      const formData = this.pastrieForm.value;\n      this.ps.createPastrie(formData).subscribe(() => {\n        // Réinitialisez le formulaire ou effectuez une autre action après la création réussie de la pâtisserie\n        this.pastrieForm.reset();\n      });\n    }\n  }\n\n}\n","<form [formGroup]=\"pastrieForm\" (submit)=\"submitForm()\">\n    <div>\n      <label for=\"name\">Name</label>\n      <input type=\"text\" id=\"name\" formControlName=\"name\">\n      <div *ngIf=\"pastrieForm.get('name')?.invalid && pastrieForm.get('name')?.touched\">\n        <div *ngIf=\"pastrieForm.get('name')?.errors.required\">\n          Name is required\n        </div>\n      </div>\n    </div>\n    <!-- Ajoutez les autres champs du formulaire ici avec les validations correspondantes -->\n    <button type=\"submit\" [disabled]=\"pastrieForm.invalid\">Submit</button>\n  </form>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}