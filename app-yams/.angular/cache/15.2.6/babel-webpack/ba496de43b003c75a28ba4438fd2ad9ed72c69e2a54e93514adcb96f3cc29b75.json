{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../pastries.service\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdatePastrieComponent {\n  constructor(route, router, pastriesService) {\n    this.route = route;\n    this.router = router;\n    this.pastriesService = pastriesService;\n    this.pastrieId = '';\n    this.pastrie = updatePastrie();\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.pastrieId = params['id'];\n      this.pastriesService.getRecipe(this.pastrieId).subscribe(pastrie => {\n        this.pastrie = pastrie;\n      });\n    });\n  }\n  // Ajoutez la logique de mise à jour de la pâtisserie ici\n  updatePastrie() {\n    this.pastriesService.updatePastrie(this.pastrie).subscribe(() => {\n      this.router.navigate(['/pastries']);\n    });\n  }\n}\nUpdatePastrieComponent.ɵfac = function UpdatePastrieComponent_Factory(t) {\n  return new (t || UpdatePastrieComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PastriesService));\n};\nUpdatePastrieComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdatePastrieComponent,\n  selectors: [[\"app-update-pastrie\"]],\n  decls: 15,\n  vars: 2,\n  consts: [[3, \"ngSubmit\"], [\"type\", \"text\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"ref\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function UpdatePastrieComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"update-pastrie works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h2\");\n      i0.ɵɵtext(3, \"Modifier la p\\u00E2tisserie\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdatePastrieComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.updatePastrie();\n      });\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\");\n      i0.ɵɵtext(7, \"Nom:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdatePastrieComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.pastrie.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\")(10, \"label\");\n      i0.ɵɵtext(11, \"R\\u00E9f\\u00E9rence:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdatePastrieComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.pastrie.ref = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 3);\n      i0.ɵɵtext(14, \"Mettre \\u00E0 jour\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.pastrie.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.pastrie.ref);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,sBAAsB;EAIjCC,YACUC,KAAqB,EACrBC,MAAc,EACdC,eAAgC;IAFhC,UAAK,GAALF,KAAK;IACL,WAAM,GAANC,MAAM;IACN,oBAAe,GAAfC,eAAe;IAEvB,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,OAAO,GAAGC,aAAa,EAAE;EAChC;EAEAC,QAAQ;IACN,IAAI,CAACN,KAAK,CAACO,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,IAAI,CAACJ,SAAS,GAAGI,MAAM,CAAC,IAAI,CAAC;MAC7B,IAAI,CAACL,eAAe,CAACO,SAAS,CAAC,IAAI,CAACN,SAAS,CAAC,CAACK,SAAS,CAACJ,OAAO,IAAG;QACjE,IAAI,CAACA,OAAO,GAAGA,OAAO;MACxB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA;EACAC,aAAa;IACd,IAAI,CAACH,eAAe,CAACG,aAAa,CAAC,IAAI,CAACD,OAAO,CAAC,CAACI,SAAS,CAAC,MAAK;MAC5D,IAAI,CAACP,MAAM,CAACS,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;IAEtC,CAAC;EACH;;AA5BaZ,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVnCC,yBAAG;MAAAA,qCAAqB;MAAAA,iBAAI;MAC5BA,0BAAI;MAAAA,2CAAsB;MAAAA,iBAAK;MAE/BA,+BAAmC;MAA7BA;QAAA,OAAYC,mBAAe;MAAA,EAAC;MAChCD,2BAAK;MACIA,oBAAI;MAAAA,iBAAQ;MACnBA,gCAAmE;MAAhDA;QAAA;MAAA,EAA0B;MAA7CA,iBAAmE;MAErEA,2BAAK;MACIA,qCAAU;MAAAA,iBAAQ;MACzBA,iCAAiE;MAA9CA;QAAA;MAAA,EAAyB;MAA5CA,iBAAiE;MAInEA,kCAAsB;MAAAA,mCAAa;MAAAA,iBAAS;;;MARvBA,eAA0B;MAA1BA,0CAA0B;MAI1BA,eAAyB;MAAzBA,yCAAyB","names":["UpdatePastrieComponent","constructor","route","router","pastriesService","pastrieId","pastrie","updatePastrie","ngOnInit","params","subscribe","getRecipe","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/richardmelanie/Desktop/patisserie/Pastries/app-yams/src/app/update-pastrie/update-pastrie.component.ts","/Users/richardmelanie/Desktop/patisserie/Pastries/app-yams/src/app/update-pastrie/update-pastrie.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PastriesService } from '../pastries.service';\nimport { Pastrie } from '../pastrie';\n\n@Component({\n  selector: 'app-update-pastrie',\n  templateUrl: './update-pastrie.component.html',\n  styleUrls: ['./update-pastrie.component.scss']\n})\nexport class UpdatePastrieComponent implements OnInit {\n  pastrieId: string;\n  pastrie: Pastrie;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private pastriesService: PastriesService\n  ) {\n    this.pastrieId = '';\n    this.pastrie = updatePastrie();\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.pastrieId = params['id'];\n      this.pastriesService.getRecipe(this.pastrieId).subscribe(pastrie => {\n        this.pastrie = pastrie;\n      });\n    });\n  }\n\n  // Ajoutez la logique de mise à jour de la pâtisserie ici\n  updatePastrie(): void {\n this.pastriesService.updatePastrie(this.pastrie).subscribe(() => {\n     this.router.navigate(['/pastries']);\n\n  }\n}","<p>update-pastrie works!</p>\n<h2>Modifier la pâtisserie</h2>\n\n<form (ngSubmit)=\"updatePastrie()\">\n  <div>\n    <label>Nom:</label>\n    <input type=\"text\" [(ngModel)]=\"pastrie.name\" name=\"name\" required>\n  </div>\n  <div>\n    <label>Référence:</label>\n    <input type=\"text\" [(ngModel)]=\"pastrie.ref\" name=\"ref\" required>\n  </div>\n  <!-- Ajoutez d'autres champs ici pour les autres propriétés de la pâtisserie -->\n  \n  <button type=\"submit\">Mettre à jour</button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}