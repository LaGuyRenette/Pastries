{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.urlUser = environment.urlApi + '/user';\n  }\n  createUser(user) {\n    return this.http.post(this.urlUser, user, httpOptions);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAG9D,SAASC,WAAW,QAAQ,yCAAyC;;;AAErE,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIH,WAAW,CAAC;IACvB,cAAc,EAAE;GACjB;CACF;AAKD,OAAM,MAAOI,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAGL,WAAW,CAACM,MAAM,GAAG,OAAO;EAEP;EAEvCC,UAAU,CAACC,IAAW;IAEpB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAO,IAAI,CAACC,OAAO,EAAEF,IAAI,EAAEP,WAAW,CAAC;EAC9D;;AARWE,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAQ,SAAXR,WAAW;EAAAS,YAFV;AAAM","names":["HttpHeaders","environment","httpOptions","headers","UserService","constructor","http","urlApi","createUser","user","post","urlUser","factory","providedIn"],"sourceRoot":"","sources":["/Users/richardmelanie/Desktop/patisserie/app-yams/src/app/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\nimport { environment } from '../environments/environment.development'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private urlUser = environment.urlApi + '/user';\n\n  constructor(private http: HttpClient) {}\n\n  createUser(user : User):Observable<User>{\n\n    return this.http.post<User>(this.urlUser, user, httpOptions);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}