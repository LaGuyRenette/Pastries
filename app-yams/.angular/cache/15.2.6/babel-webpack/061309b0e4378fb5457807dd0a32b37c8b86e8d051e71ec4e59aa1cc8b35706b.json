{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../pastries.service\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    \"active\": a0\n  };\n};\nfunction PaginationComponent_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 5)(1, \"a\", 6);\n    i0.ɵɵlistener(\"click\", function PaginationComponent_li_5_Template_a_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const page_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectedPage(page_r1));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const page_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, ctx_r0.currentPage == page_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(page_r1);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"disabled\": a0\n  };\n};\nexport class PaginationComponent {\n  constructor(ps) {\n    this.ps = ps;\n    this.perPage = 3; // nombre de patisseries par page\n    this.currentPage = 1;\n    this.numberPages = 0;\n    this.total = 0;\n    this.pages = [];\n    this.paginate = new EventEmitter();\n    // l'api nous retourne le nombre de pastries on attendra d'avoir cette information\n    // avant de faire les autres calculs pour la pagination.\n    this.ps.count().subscribe(count => {\n      console.log(count, 'PAGINATION');\n      this.total = count;\n      this.numberPages = Math.ceil(this.total / this.perPage);\n      // Array est un generateur de nombre en puissance \n      this.pages = [...Array(this.numberPages).keys()].map(page => page + 1);\n      // on écoute le subject quoi qu'il arrive\n    });\n\n    this.ps.getCurrentPage().subscribe(page => {\n      console.log(`PAGE NUMBER : ${page}`);\n      /**\n       * le composant qui a changé l'item de la navigation le notifie pour\n       * lui-même et donc pour les autres, dans ce cas si un composant paginate\n       * n'était sur la même page il se met à jour.\n       */\n      this.currentPage = page;\n    });\n  }\n  next() {\n    this.currentPage = this.currentPage == this.numberPages ? 1 : this.currentPage + 1;\n    this.paginate.emit(this.calculPaginate(this.currentPage));\n    this.ps.setCurrentPage(this.currentPage);\n  }\n  previous() {\n    this.currentPage = this.currentPage == 1 ? this.numberPages : this.currentPage - 1;\n    this.paginate.emit(this.calculPaginate(this.currentPage));\n    this.ps.setCurrentPage(this.currentPage);\n  }\n  selectedPage(page) {\n    this.currentPage = page;\n    this.paginate.emit(this.calculPaginate(this.currentPage));\n    this.ps.setCurrentPage(this.currentPage);\n  }\n  calculPaginate(page) {\n    const start = (page - 1) * this.perPage;\n    const end = start + this.perPage;\n    return {\n      start,\n      end\n    };\n  }\n}\nPaginationComponent.ɵfac = function PaginationComponent_Factory(t) {\n  return new (t || PaginationComponent)(i0.ɵɵdirectiveInject(i1.PastriesService));\n};\nPaginationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PaginationComponent,\n  selectors: [[\"app-pagination\"]],\n  outputs: {\n    paginate: \"paginate\"\n  },\n  decls: 9,\n  vars: 7,\n  consts: [[\"aria-label\", \"Page navigation example\"], [1, \"pagination\", \"justify-content-center\"], [1, \"page-item\", 3, \"ngClass\", \"click\"], [\"tabindex\", \"-1\", 1, \"page-link\", \"current\"], [\"class\", \"page-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"page-item\"], [1, \"page-link\", \"current\", 3, \"ngClass\", \"click\"]],\n  template: function PaginationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nav\", 0)(1, \"ul\", 1)(2, \"li\", 2);\n      i0.ɵɵlistener(\"click\", function PaginationComponent_Template_li_click_2_listener() {\n        return ctx.previous();\n      });\n      i0.ɵɵelementStart(3, \"a\", 3);\n      i0.ɵɵtext(4, \"Previous\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(5, PaginationComponent_li_5_Template, 3, 4, \"li\", 4);\n      i0.ɵɵelementStart(6, \"li\", 5)(7, \"a\", 6);\n      i0.ɵɵlistener(\"click\", function PaginationComponent_Template_a_click_7_listener() {\n        return ctx.next();\n      });\n      i0.ɵɵtext(8, \"Next\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c1, ctx.currentPage == 1));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.pages);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c1, ctx.currentPage == ctx.numberPages));\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf],\n  styles: [\".current[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnaW5hdGlvbi9wYWdpbmF0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLmN1cnJlbnR7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","i0","PaginationComponent","constructor","ps","count","subscribe","console","log","total","numberPages","Math","ceil","perPage","pages","Array","keys","map","page","getCurrentPage","currentPage","next","paginate","emit","calculPaginate","setCurrentPage","previous","selectedPage","start","end","selectors","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/richardmelanie/Desktop/patisserie/Pastries/app-yams/src/app/pagination/pagination.component.ts","/Users/richardmelanie/Desktop/patisserie/Pastries/app-yams/src/app/pagination/pagination.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { PastriesService } from '../pastries.service';\nimport { Paginate } from '../pastrie';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.scss']\n})\nexport class PaginationComponent {\n  perPage: number = 3; // nombre de patisseries par page\n  currentPage: number = 1;\n  numberPages: number = 0;\n  total: number = 0;\n  pages: number[] = [];\n  @Output() paginate: EventEmitter<Paginate> = new EventEmitter();\n\n  constructor(private ps: PastriesService) {\n\n    // l'api nous retourne le nombre de pastries on attendra d'avoir cette information\n    // avant de faire les autres calculs pour la pagination.\n    this.ps.count().subscribe((count) => {\n      console.log(count, 'PAGINATION');\n\n      this.total = count;\n      this.numberPages = Math.ceil(this.total / this.perPage);\n      // Array est un generateur de nombre en puissance \n      this.pages = [...Array(this.numberPages).keys()].map(page => page + 1);\n      // on écoute le subject quoi qu'il arrive\n    });\n\n    this.ps.getCurrentPage().subscribe(page => {\n      console.log(`PAGE NUMBER : ${page}`);\n      /**\n       * le composant qui a changé l'item de la navigation le notifie pour\n       * lui-même et donc pour les autres, dans ce cas si un composant paginate\n       * n'était sur la même page il se met à jour.\n       */\n      this.currentPage = page;\n    });\n  }\n\n  next() {\n    this.currentPage = (this.currentPage == this.numberPages) ? 1 : this.currentPage + 1;\n    this.paginate.emit(this.calculPaginate(this.currentPage));\n    this.ps.setCurrentPage(this.currentPage);\n  }\n\n  previous() {\n    this.currentPage = (this.currentPage == 1) ? this.numberPages : this.currentPage - 1;\n    this.paginate.emit(this.calculPaginate(this.currentPage));\n    this.ps.setCurrentPage(this.currentPage);\n  }\n\n  selectedPage(page: number) {\n    this.currentPage = page;\n    this.paginate.emit(this.calculPaginate(this.currentPage));\n    this.ps.setCurrentPage(this.currentPage);\n  }\n\n  calculPaginate(page: number): Paginate {\n    const start = (page - 1) * this.perPage;\n    const end = start + this.perPage;\n\n    return { start, end };\n  }\n\n}\n","<nav aria-label=\"Page navigation example\">\n    <ul class=\"pagination justify-content-center\">\n      <li \n        (click)=\"previous()\"\n        class=\"page-item \"\n        [ngClass]=\"{'disabled' : currentPage == 1}\"\n      >\n        <a class=\"page-link current\"  tabindex=\"-1\">Previous</a>\n      </li>\n      <li \n        class=\"page-item\" \n        *ngFor=\"let page of pages\"\n      >\n        <a \n            class=\"page-link current\" \n            (click)=\"selectedPage(page)\"\n            [ngClass]=\"{'active' :  currentPage == page }\"\n        >{{ page }}</a>\n      </li>\n    \n      <li class=\"page-item\">\n        <a  (click)=\"next()\"\n            class=\"page-link current\" \n            [ngClass]=\"{'disabled' : currentPage == numberPages }\"\n        >Next</a>\n      </li>\n    </ul>\n  </nav>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}